[debug] The com.lightbend.training.scalatrain.Train has the following regular definitions changed:
[debug] 	UsedName(apply,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(unapply,[Default]), UsedName(info,[Default]), UsedName(number,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(com;lightbend;training;scalatrain;Train;init;,[Default]), UsedName(Train,[Default]), UsedName(kind,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]).
[debug] All member reference dependencies will be considered within this context.
[debug] Files invalidated by inheriting from (external) com.lightbend.training.scalatrain.Train: Set(); now invalidating by inheritance (internally).
[debug] Getting direct dependencies of all classes transitively invalidated by inheritance.
[debug] Getting classes that directly depend on (external) com.lightbend.training.scalatrain.Train.
[debug] The following modified names cause invalidation of com.lightbend.training.scalatrain.JourneyPlannerSpec: Set(UsedName(apply,[Default]), UsedName(Train,[Default]))
[debug] The following modified names cause invalidation of com.lightbend.training.scalatrain.TestData: Set(UsedName(apply,[Default]), UsedName(Train,[Default]))
[debug] The following modified names cause invalidation of com.lightbend.training.scalatrain.TrainSpec: Set(UsedName(apply,[Default]), UsedName(Train,[Default]))
[debug] The com.lightbend.training.scalatrain.Train$ has the following regular definitions changed:
[debug] 	UsedName(apply,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(unapply,[Default]), UsedName(info,[Default]), UsedName(number,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(com;lightbend;training;scalatrain;Train;init;,[Default]), UsedName(Train,[Default]), UsedName(kind,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]).
[debug] All member reference dependencies will be considered within this context.
[debug] Files invalidated by inheriting from (external) com.lightbend.training.scalatrain.Train$: Set(); now invalidating by inheritance (internally).
[debug] Getting direct dependencies of all classes transitively invalidated by inheritance.
[debug] Getting classes that directly depend on (external) com.lightbend.training.scalatrain.Train$.
[debug] The following modified names cause invalidation of com.lightbend.training.scalatrain.TestData: Set(UsedName(apply,[Default]), UsedName(Train,[Default]))
[debug] The following modified names cause invalidation of com.lightbend.training.scalatrain.TrainSpec: Set(UsedName(apply,[Default]), UsedName(Train,[Default]))
[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set(C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\src\test\scala\TestTest.scala)
[debug] 	added: Set()
[debug] 	modified: Set(C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\src\test\scala\com\lightbend\training\scalatrain\TestData.scala, C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\src\test\scala\com\lightbend\training\scalatrain\TrainSpec.scala)
[debug] Invalidated products: Set()
[debug] External API changes: API Changes: Set(NamesChange(com.lightbend.training.scalatrain.Train,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(unapply,[Default]), UsedName(info,[Default]), UsedName(number,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(com;lightbend;training;scalatrain;Train;init;,[Default]), UsedName(Train,[Default]), UsedName(kind,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]))), NamesChange(com.lightbend.training.scalatrain.Train$,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(unapply,[Default]), UsedName(info,[Default]), UsedName(number,[Default]), UsedName(copy,[Default]), UsedName(copy$default$3,[Default]), UsedName(com;lightbend;training;scalatrain;Train;init;,[Default]), UsedName(Train,[Default]), UsedName(kind,[Default]), UsedName(copy$default$1,[Default]), UsedName(copy$default$2,[Default]))))
[debug] Modified binary dependencies: Set(C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\target\scala-2.13\classes)
[debug] Initial directly invalidated classes: Set(TestTest, com.lightbend.training.scalatrain.TestData, com.lightbend.training.scalatrain.TrainSpec)
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set(com.lightbend.training.scalatrain.JourneyPlannerSpec, com.lightbend.training.scalatrain.TestData, com.lightbend.training.scalatrain.TrainSpec)
[debug] All initially invalidated classes: Set(TestTest, com.lightbend.training.scalatrain.TestData, com.lightbend.training.scalatrain.TrainSpec, com.lightbend.training.scalatrain.JourneyPlannerSpec)
[debug] All initially invalidated sources:Set(C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\src\test\scala\com\lightbend\training\scalatrain\TestData.scala, C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\src\test\scala\com\lightbend\training\scalatrain\TrainSpec.scala)
[debug] Initial set of included nodes: TestTest, com.lightbend.training.scalatrain.TestData, com.lightbend.training.scalatrain.TrainSpec, com.lightbend.training.scalatrain.JourneyPlannerSpec
[debug] Recompiling all sources: number of invalidated sources > 50.0% of all sources
[info] Compiling 4 Scala sources to C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\target\scala-2.13\test-classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.3.4:compile for Scala 2.13.1
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.3.4:compile for Scala 2.13.1
[debug] [zinc] Running cached compiler 46955dd9 for Scala compiler version 2.13.1
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-unchecked
[debug] 	-deprecation
[debug] 	-language:_
[debug] 	-encoding
[debug] 	UTF-8
[debug] 	-Xfatal-warnings
[debug] 	-bootclasspath
[debug] 	C:\apps\java\jdk1.8.0_171\jre\lib\resources.jar;C:\apps\java\jdk1.8.0_171\jre\lib\rt.jar;C:\apps\java\jdk1.8.0_171\jre\lib\sunrsasign.jar;C:\apps\java\jdk1.8.0_171\jre\lib\jsse.jar;C:\apps\java\jdk1.8.0_171\jre\lib\jce.jar;C:\apps\java\jdk1.8.0_171\jre\lib\charsets.jar;C:\apps\java\jdk1.8.0_171\jre\lib\jfr.jar;C:\apps\java\jdk1.8.0_171\jre\classes;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.1\scala-library-2.13.1.jar
[debug] 	-classpath
[debug] 	C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\target\scala-2.13\test-classes;C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\exercises\target\scala-2.13\classes;C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\common\target\scala-2.13\classes;C:\Users\dell\Documents\A-Study\Scala\LSL-P-lightbend-scala-language-professional\exercises\common\target\scala-2.13\test-classes;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_2.13\1.2.0\scala-xml_2.13-1.2.0.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\fasterxml\jackson\core\jackson-core\2.10.1\jackson-core-2.10.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\joda-time\joda-time\2.10.5\joda-time-2.10.5.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\fasterxml\jackson\core\jackson-annotations\2.10.1\jackson-annotations-2.10.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.10.1\jackson-datatype-jdk8-2.10.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.10.1\jackson-datatype-jsr310-2.10.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest-compatible\3.1.0\scalatest-compatible-3.1.0.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\typesafe\play\play-functional_2.13\2.8.1\play-functional_2.13-2.8.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\fasterxml\jackson\core\jackson-databind\2.10.1\jackson-databind-2.10.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_2.13\3.1.0\scalactic_2.13-3.1.0.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.1\scala-reflect-2.13.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\typesafe\play\play-json_2.13\2.8.1\play-json_2.13-2.8.1.jar;C:\Users\dell\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_2.13\3.1.0\scalatest_2.13-3.1.0.jar
[debug] Scala compilation took 1.2245636 s
[info] Done compiling.
[debug] Invalidating (transitively) by inheritance from TestTest...
[debug] Initial set of included nodes: TestTest
[debug] Invalidated by transitive inheritance dependency: Set(TestTest)
[debug] Change NamesChange(TestTest,ModifiedNames(changes = UsedName(unconstrainedEquality,[Implicit]), UsedName(expectedTestCount,[Default]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(a,[Default]), UsedName(withFixture,[Default]), UsedName(runNestedSuites,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(assert,[Default]), UsedName(typeCheck,[Default]), UsedName(suiteId,[Default]), UsedName(Collected,[Default]), UsedName(RegexWrapper,[Default]), UsedName(DecidedWord,[Default]), UsedName(inOrder,[Default]), UsedName(they,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(NoArgTest,[Default]), UsedName(execute,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(compile,[Default]), UsedName(toString,[Default]), UsedName(an,[Default]), UsedName(>=,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(atMostOneOf,[Default]), UsedName(finalize,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(fullyMatch,[Default]), UsedName(pending,[Default]), UsedName(registerTest,[Default]), UsedName(!==,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(value,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(atMost,[Default]), UsedName(<=,[Default]), UsedName(oneElementOf,[Default]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(empty,[Default]), UsedName(isInstanceOf,[Default]), UsedName(KeyWord,[Default]), UsedName(every,[Default]), UsedName(markup,[Default]), UsedName(equals,[Default]), UsedName(definedAt,[Default]), UsedName(!=,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(exactly,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(matchPattern,[Default]), UsedName(behave,[Default]), UsedName(the,[Default]), UsedName(runTests,[Default]), UsedName(assertCompiles,[Default]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(==,[Default]), UsedName(AnWord,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(ItWord,[Default]), UsedName(cancel,[Default]), UsedName(be,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(key,[Default]), UsedName(thrownBy,[Default]), UsedName(wait,[Default]), UsedName(inOrderOnly,[Default]), UsedName(assume,[Default]), UsedName(runTest,[Default]), UsedName(execute$default$5,[Default]), UsedName(noElementsOf,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(include,[Default]), UsedName(it,[Default]), UsedName(doCollected,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName($isInstanceOf,[Default]), UsedName(===,[Default]), UsedName(length,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(createCatchReporter,[Default]), UsedName(ne,[Default]), UsedName(execute$default$3,[Default]), UsedName(info,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName(ValueWord,[Default]), UsedName(no,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(allElementsOf,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(testNames,[Default]), UsedName(synchronized,[Default]), UsedName(stackDepth,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(execute$default$6,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(of,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(defined,[Default]), UsedName(run,[Default]), UsedName(between,[Default]), UsedName(DeterminedWord,[Default]), UsedName(endWith,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(noneOf,[Default]), UsedName(afterWord,[Default]), UsedName(contain,[Default]), UsedName(exist,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(readable,[Default]), UsedName(note,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(styleName,[Default]), UsedName(only,[Default]), UsedName(determined,[Default]), UsedName(rerunner,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(testDataFor,[Default]), UsedName(theSameElementsAs,[Default]), UsedName(<,[Default]), UsedName(after,[Default]), UsedName(notifyAll,[Default]), UsedName(suiteName,[Default]), UsedName(message,[Default]), UsedName(writable,[Default]), UsedName(convertToWordSpecStringWrapper,[Implicit]), UsedName(assertTypeError,[Default]), UsedName(clone,[Default]), UsedName(AfterWord,[Default]), UsedName(asInstanceOf,[Default]), UsedName(fail,[Default]), UsedName(allOf,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(AWord,[Default]), UsedName(TestTest,[Default]), UsedName(subjectRegistrationFunction,[Implicit]), UsedName(size,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(not,[Default]), UsedName(equal,[Default]), UsedName(subjectWithAfterWordRegistrationFunction,[Implicit]), UsedName(succeed,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(WordSpecStringWrapper,[Default]), UsedName(eq,[Default]), UsedName(noException,[Default]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName($asInstanceOf,[Default]), UsedName(execute$default$4,[Default]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(sorted,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(oneOf,[Default]), UsedName(RegexWord,[Default]), UsedName(ResultOfTaggedAsInvocationOnString,[Default]), UsedName(##,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(atLeast,[Default]), UsedName(assertThrows,[Default]), UsedName(Equalizer,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(regex,[Default]), UsedName(AnyShouldWrapper,[Default]), UsedName(decided,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(execute$default$7,[Default]), UsedName(hashCode,[Default]), UsedName(StringShouldWrapper,[Default]), UsedName(intercept,[Default]), UsedName(TheAfterWord,[Default]), UsedName(withClue,[Default]), UsedName($init$,[Default]), UsedName(execute$default$2,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(defaultEquality,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(atMostOneElementOf,[Default]), UsedName(alert,[Default]), UsedName(TestTest;init;,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(assertResult,[Default]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(>,[Default]), UsedName(nestedSuites,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(execute$default$1,[Default]), UsedName(have,[Default]), UsedName(notify,[Default]), UsedName(all,[Default]), UsedName(startWith,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(TheyWord,[Default]), UsedName(getClass,[Default]), UsedName(tags,[Default]), UsedName(PlusOrMinusWrapper,[Default]))) invalidates 1 classes due to The TestTest has the following implicit definitions changed:
[debug] 	UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(convertToWordSpecStringWrapper,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(subjectRegistrationFunction,[Implicit]), UsedName(subjectWithAfterWordRegistrationFunction,[Implicit]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(convertToStringCanWrapper,[Implicit]).
[debug] 	> by transitive inheritance: Set(TestTest)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] New invalidations:
[debug] 	Set()
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] 	Set()
[debug] No classes were invalidated.
